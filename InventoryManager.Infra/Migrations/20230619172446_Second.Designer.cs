// <auto-generated />
using System;
using InventoryManager.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryManager.Infra.Data.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20230619172446_Second")]
    partial class Second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryManager.Core.DomainEntities.Merchandise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MANUFACTURER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NAME");

                    b.Property<int?>("RegisterNumber")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("REGISTER_NUMBER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TYPE");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("MERCHANDISE", (string)null);
                });

            modelBuilder.Entity("InventoryManager.Core.DomainEntities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATETIME");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOCAL");

                    b.Property<Guid?>("MerchandiseId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MERCHANDISE_ID");

                    b.Property<Guid?>("MerchandiseInboundTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("QUANTITY");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("TYPE");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("MerchandiseId");

                    b.ToTable("TRANSACTION", (string)null);
                });

            modelBuilder.Entity("InventoryManager.Core.DomainEntities.Transaction", b =>
                {
                    b.HasOne("InventoryManager.Core.DomainEntities.Merchandise", "Merchandise")
                        .WithMany("Transactions")
                        .HasForeignKey("MerchandiseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Merchandise");
                });

            modelBuilder.Entity("InventoryManager.Core.DomainEntities.Merchandise", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
